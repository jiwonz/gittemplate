#!/bin/bash

if [[ "$1" == "template" ]]; then
    if [[ "$2" == "update" ]]; then
        echo "Updating template..."
        git fetch
        git merge --no-commit $(git remote show)/$(git branch --show-current)
        git checkout HEAD -- $(git ls-files | grep -v -f .gittemplate)
        cat .gittemplate | xargs -d '\n' mkdir -p
        echo "Template update completed successfully."
        exit 0
    fi
    if [[ "$2" == "new" ]]; then
        url="$3"
        if [[ -z "$3" ]]; then
            #echo "Argument 3 is not given"
            echo -n "repo url: "
            read url
        else
           echo "Argument 3 is: $3"
        fi
        echo -n "project name: "
        read projectname
        git clone "$url" "$projectname"
        cd "$projectname"
        touch .gittemplate
        cat .gittemplate | xargs -d '\n' mkdir -p
        exit 0
    fi
    if [[ "$2" == "add" ]]; then
        if [[ -z "$3" ]]; then
            :
        else
            echo -e "$3" >> .gittemplate
            git add ".gittemplate"
            echo "$3 was added to .gittemplate."
        fi
        exit 0
    fi
    if [[ "$2" == "remove" ]]; then
        if [[ -z "$3" ]]; then
            :
        else
            if grep -qF "$3" .gittemplate >/dev/null; then
                :
            else
                echo "cannot find $3 in .gittemplate"
                exit 1
            fi
            sed -i "s#$3##g; /^$/d" .gittemplate
            git add ".gittemplate"
            echo "$3 was removed from .gittemplate."
        fi
        exit 0
    fi
    if [[ "$2" == "show" ]]; then
        cat .gittemplate
        exit 0
    fi
    echo "gittemplate: '$2' is not a gittemplate command."
    exit 1
fi

/usr/bin/git "$@"

exit 0